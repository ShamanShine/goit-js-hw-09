{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\n  // Получаем ссылку на форму по классу\n  const feedbackForm = document.querySelector(\".feedback-form\");\n  // Функция для сохранения состояния формы в локальное хранилище\n  function saveFormState() {\n    // Получаем значения полей формы и сохраняем их в объект\n    const formData = {\n      email: feedbackForm.elements.email.value.trim(),\n      message: feedbackForm.elements.message.value.trim(),\n    };\n    // Преобразуем объект в строку JSON и сохраняем в локальное хранилище\n    localStorage.setItem(\"feedback-form-state\", JSON.stringify(formData));\n  }\n  // Функция для загрузки состояния формы из локального хранилища\n  function loadFormState() {\n    // Получаем сохраненные данные из локального хранилища\n    const savedFormData = localStorage.getItem(\"feedback-form-state\");\n    // Если данные есть, преобразуем строку JSON в объект и заполняем поля формы\n    if (savedFormData) {\n      const parsedData = JSON.parse(savedFormData);\n      feedbackForm.elements.email.value = parsedData.email;\n      feedbackForm.elements.message.value = parsedData.message;\n    }\n  }\n  // Слушаем изменения в полях формы и вызываем функцию сохранения состояния\n  feedbackForm.addEventListener(\"input\", function () {\n    saveFormState();\n  });\n  // Слушаем событие отправки формы\n  feedbackForm.addEventListener(\"submit\", function (event) {\n    // Отменим стандартное поведение формы\n    event.preventDefault();\n    // Получаем значения полей формы после отправки\n    const emailValue = feedbackForm.elements.email.value.trim();\n    const messageValue = feedbackForm.elements.message.value.trim();\n    // Проверяем, заполнены ли оба поля\n    if (emailValue && messageValue) {\n      // Если да, выводим данные в консоль\n      console.log({\n        email: emailValue,\n        message: messageValue,\n      });\n      // Очищаем локальное хранилище и поля формы\n      localStorage.removeItem(\"feedback-form-state\");\n      feedbackForm.reset();\n    }\n  });\n  // Загружаем состояние формы при загрузке страницы.если страница перезагрузиться то данные подставяться обратно в поля формы автоматически\n  loadFormState();\n});\n"],"names":["feedbackForm","saveFormState","formData","loadFormState","savedFormData","parsedData","event","emailValue","messageValue"],"mappings":"oCAAA,SAAS,iBAAiB,mBAAoB,UAAY,CAExD,MAAMA,EAAe,SAAS,cAAc,gBAAgB,EAE5D,SAASC,GAAgB,CAEvB,MAAMC,EAAW,CACf,MAAOF,EAAa,SAAS,MAAM,MAAM,KAAM,EAC/C,QAASA,EAAa,SAAS,QAAQ,MAAM,KAAM,CACzD,EAEI,aAAa,QAAQ,sBAAuB,KAAK,UAAUE,CAAQ,CAAC,CACrE,CAED,SAASC,GAAgB,CAEvB,MAAMC,EAAgB,aAAa,QAAQ,qBAAqB,EAEhE,GAAIA,EAAe,CACjB,MAAMC,EAAa,KAAK,MAAMD,CAAa,EAC3CJ,EAAa,SAAS,MAAM,MAAQK,EAAW,MAC/CL,EAAa,SAAS,QAAQ,MAAQK,EAAW,OAClD,CACF,CAEDL,EAAa,iBAAiB,QAAS,UAAY,CACjDC,GACJ,CAAG,EAEDD,EAAa,iBAAiB,SAAU,SAAUM,EAAO,CAEvDA,EAAM,eAAc,EAEpB,MAAMC,EAAaP,EAAa,SAAS,MAAM,MAAM,OAC/CQ,EAAeR,EAAa,SAAS,QAAQ,MAAM,OAErDO,GAAcC,IAEhB,QAAQ,IAAI,CACV,MAAOD,EACP,QAASC,CACjB,CAAO,EAED,aAAa,WAAW,qBAAqB,EAC7CR,EAAa,MAAK,EAExB,CAAG,EAEDG,GACF,CAAC"}